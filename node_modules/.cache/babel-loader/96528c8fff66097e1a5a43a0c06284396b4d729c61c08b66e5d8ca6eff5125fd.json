{"ast":null,"code":"// Copyright 2011 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n\n'use strict';\n\nvar ipaddr = require('ipaddr.js'),\n  net = require('net'),\n  util = require('util'),\n  EventEmitter = require('events').EventEmitter,\n  PendingRequests = require('./pending'),\n  Packet = require('./packet'),\n  consts = require('native-dns-packet').consts,\n  utils = require('./utils'),\n  platform = require('./platform');\nvar A = consts.NAME_TO_QTYPE.A,\n  AAAA = consts.NAME_TO_QTYPE.AAAA,\n  MX = consts.NAME_TO_QTYPE.MX,\n  TXT = consts.NAME_TO_QTYPE.TXT,\n  NS = consts.NAME_TO_QTYPE.NS,\n  CNAME = consts.NAME_TO_QTYPE.CNAME,\n  SRV = consts.NAME_TO_QTYPE.SRV,\n  PTR = consts.NAME_TO_QTYPE.PTR;\nvar debug = function () {};\nif (process.env.NODE_DEBUG && process.env.NODE_DEBUG.match(/dns/)) {\n  debug = function debug() {\n    var args = Array.prototype.slice.call(arguments);\n    console.error.apply(this, ['client', Date.now().toString()].concat(args));\n  };\n}\nvar Request = exports.Request = function (opts) {\n  if (!(this instanceof Request)) return new Request(opts);\n  this.question = opts.question;\n  this.server = opts.server;\n  if (typeof this.server === 'string' || this.server instanceof String) this.server = {\n    address: this.server,\n    port: 53,\n    type: 'udp'\n  };\n  if (!this.server || !this.server.address || !net.isIP(this.server.address)) throw new Error('Server object must be supplied with at least address');\n  if (!this.server.type || ['udp', 'tcp'].indexOf(this.server.type) === -1) this.server.type = 'udp';\n  if (!this.server.port) this.server.port = 53;\n  this.timeout = opts.timeout || 4 * 1000;\n  this.try_edns = opts.try_edns || false;\n  this.fired = false;\n  this.id = undefined;\n  if (opts.cache || opts.cache === false) {\n    this.cache = opts.cache;\n  } else {\n    this.cache = platform.cache;\n  }\n  debug('request created', this.question);\n};\nutil.inherits(Request, EventEmitter);\nRequest.prototype.handle = function (err, answer, cached) {\n  if (!this.fired) {\n    debug('request handled', this.id, this.question);\n    if (!cached && this.cache && this.cache.store && answer) {\n      this.cache.store(answer);\n    }\n    this.emit('message', err, answer);\n    this.done();\n  }\n};\nRequest.prototype.done = function () {\n  debug('request finished', this.id, this.question);\n  this.fired = true;\n  clearTimeout(this.timer_);\n  PendingRequests.remove(this);\n  this.emit('end');\n  this.id = undefined;\n};\nRequest.prototype.handleTimeout = function () {\n  if (!this.fired) {\n    debug('request timedout', this.id, this.question);\n    this.emit('timeout');\n    this.done();\n  }\n};\nRequest.prototype.error = function (err) {\n  if (!this.fired) {\n    debug('request error', err, this.id, this.question);\n    this.emit('error', err);\n    this.done();\n  }\n};\nRequest.prototype.send = function () {\n  debug('request starting', this.question);\n  var self = this;\n  if (this.cache && this.cache.lookup) {\n    this.cache.lookup(this.question, function (results) {\n      var packet;\n      if (!results) {\n        self._send();\n      } else {\n        packet = new Packet();\n        packet.answer = results.slice();\n        self.handle(null, packet, true);\n      }\n    });\n  } else {\n    this._send();\n  }\n};\nRequest.prototype._send = function () {\n  debug('request not in cache', this.question);\n  var self = this;\n  this.timer_ = setTimeout(function () {\n    self.handleTimeout();\n  }, this.timeout);\n  PendingRequests.send(self);\n};\nRequest.prototype.cancel = function () {\n  debug('request cancelled', this.id, this.question);\n  this.emit('cancelled');\n  this.done();\n};\nvar _queue = [];\nvar sendQueued = function () {\n  debug('platform ready sending queued requests');\n  _queue.forEach(function (request) {\n    request.start();\n  });\n  _queue = [];\n};\nplatform.on('ready', function () {\n  sendQueued();\n});\nif (platform.ready) {\n  sendQueued();\n}\nvar Resolve = function Resolve(opts, cb) {\n  if (!(this instanceof Resolve)) return new Resolve(opts, cb);\n  this.opts = util._extend({\n    retryOnTruncate: true\n  }, opts);\n  this._domain = opts.domain;\n  this._rrtype = opts.rrtype;\n  this._buildQuestion(this._domain);\n  this._started = false;\n  this._current_server = undefined;\n  this._server_list = [];\n  if (opts.remote) {\n    this._server_list.push({\n      address: opts.remote,\n      port: 53,\n      type: 'tcp'\n    });\n    this._server_list.push({\n      address: opts.remote,\n      port: 53,\n      type: 'udp'\n    });\n  }\n  this._request = undefined;\n  this._type = 'getHostByName';\n  this._cb = cb;\n  if (!platform.ready) {\n    _queue.push(this);\n  } else {\n    this.start();\n  }\n};\n_c = Resolve;\nutil.inherits(Resolve, EventEmitter);\nResolve.prototype.cancel = function () {\n  if (this._request) {\n    this._request.cancel();\n  }\n};\nResolve.prototype._buildQuestion = function (name) {\n  debug('building question', name);\n  this.question = {\n    type: this._rrtype,\n    class: consts.NAME_TO_QCLASS.IN,\n    name: name\n  };\n};\nexports.Resolve = Resolve;\nResolve.prototype._emit = function (err, answer) {\n  debug('resolve end', this._domain);\n  var self = this;\n  process.nextTick(function () {\n    if (err) {\n      err.syscall = self._type;\n    }\n    self._cb(err, answer);\n  });\n};\nResolve.prototype._fillServers = function () {\n  debug('resolve filling servers', this._domain);\n  var tries = 0,\n    s,\n    t,\n    u,\n    slist;\n  slist = platform.name_servers;\n  while (this._server_list.length < platform.attempts) {\n    s = slist[tries % slist.length];\n    u = {\n      address: s.address,\n      port: s.port,\n      type: 'udp'\n    };\n    t = {\n      address: s.address,\n      port: s.port,\n      type: 'tcp'\n    };\n    this._server_list.push(u);\n    this._server_list.push(t);\n    tries += 1;\n  }\n  this._server_list.reverse();\n};\nResolve.prototype._popServer = function () {\n  debug('resolve pop server', this._current_server, this._domain);\n  this._server_list.splice(0, 1, this._current_server);\n};\nResolve.prototype._preStart = function () {\n  if (!this._started) {\n    this._started = new Date().getTime();\n    this.try_edns = platform.edns;\n    if (!this._server_list.length) this._fillServers();\n  }\n};\nResolve.prototype._shouldContinue = function () {\n  debug('resolve should continue', this._server_list.length, this._domain);\n  return this._server_list.length;\n};\nResolve.prototype._nextQuestion = function () {\n  debug('resolve next question', this._domain);\n};\nResolve.prototype.start = function () {\n  if (!this._started) {\n    this._preStart();\n  }\n  if (this._server_list.length === 0) {\n    debug('resolve no more servers', this._domain);\n    this.handleTimeout();\n  } else {\n    this._current_server = this._server_list.pop();\n    debug('resolve start', this._current_server, this._domain);\n    this._request = Request({\n      question: this.question,\n      server: this._current_server,\n      timeout: platform.timeout,\n      try_edns: this.try_edns\n    });\n    this._request.on('timeout', this._handleTimeout.bind(this));\n    this._request.on('message', this._handle.bind(this));\n    this._request.on('error', this._handle.bind(this));\n    this._request.send();\n  }\n};\nvar NOERROR = consts.NAME_TO_RCODE.NOERROR,\n  SERVFAIL = consts.NAME_TO_RCODE.SERVFAIL,\n  NOTFOUND = consts.NAME_TO_RCODE.NOTFOUND,\n  FORMERR = consts.NAME_TO_RCODE.FORMERR;\nResolve.prototype._handle = function (err, answer) {\n  var rcode, errno;\n  if (answer) {\n    rcode = answer.header.rcode;\n  }\n  debug('resolve handle', rcode, this._domain);\n  switch (rcode) {\n    case NOERROR:\n      // answer trucated retry with tcp\n      //console.log(answer);\n      if (answer.header.tc && this.opts.retryOnTruncate && this._shouldContinue()) {\n        debug('truncated', this._domain, answer);\n        this.emit('truncated', err, answer);\n\n        // remove udp servers\n        this._server_list = this._server_list.filter(function (server) {\n          return server.type === 'tcp';\n        });\n        answer = undefined;\n      }\n      break;\n    case SERVFAIL:\n      if (this._shouldContinue()) {\n        this._nextQuestion();\n        //this._popServer();\n      } else {\n        errno = consts.SERVFAIL;\n      }\n      answer = undefined;\n      break;\n    case NOTFOUND:\n      if (this._shouldContinue()) {\n        this._nextQuestion();\n      } else {\n        errno = consts.NOTFOUND;\n      }\n      answer = undefined;\n      break;\n    case FORMERR:\n      if (this.try_edns) {\n        this.try_edns = false;\n        //this._popServer();\n      } else {\n        errno = consts.FORMERR;\n      }\n      answer = undefined;\n      break;\n    default:\n      if (!err) {\n        errno = consts.RCODE_TO_NAME[rcode];\n        answer = undefined;\n      } else {\n        errno = consts.NOTFOUND;\n      }\n      break;\n  }\n  if (errno || answer) {\n    if (errno) {\n      err = new Error(this._type + ' ' + errno);\n      err.errno = err.code = errno;\n    }\n    this._emit(err, answer);\n  } else {\n    this.start();\n  }\n};\nResolve.prototype._handleTimeout = function () {\n  var err;\n  if (this._server_list.length === 0) {\n    debug('resolve timeout no more servers', this._domain);\n    err = new Error(this._type + ' ' + consts.TIMEOUT);\n    err.errno = consts.TIMEOUT;\n    this._emit(err, undefined);\n  } else {\n    debug('resolve timeout continue', this._domain);\n    this.start();\n  }\n};\nvar resolve = function (domain, rrtype, ip, callback) {\n  var res;\n  if (!callback) {\n    callback = ip;\n    ip = undefined;\n  }\n  if (!callback) {\n    callback = rrtype;\n    rrtype = undefined;\n  }\n  rrtype = consts.NAME_TO_QTYPE[rrtype || 'A'];\n  if (rrtype === PTR) {\n    return reverse(domain, callback);\n  }\n  var opts = {\n    domain: domain,\n    rrtype: rrtype,\n    remote: ip\n  };\n  res = new Resolve(opts);\n  res._cb = function (err, response) {\n    var ret = [],\n      i,\n      a;\n    if (err) {\n      callback(err, response);\n      return;\n    }\n    for (i = 0; i < response.answer.length; i++) {\n      a = response.answer[i];\n      if (a.type === rrtype) {\n        switch (rrtype) {\n          case A:\n          case AAAA:\n            ret.push(a.address);\n            break;\n          case consts.NAME_TO_QTYPE.MX:\n            ret.push({\n              priority: a.priority,\n              exchange: a.exchange\n            });\n            break;\n          case TXT:\n          case NS:\n          case CNAME:\n          case PTR:\n            ret.push(a.data);\n            break;\n          case SRV:\n            ret.push({\n              priority: a.priority,\n              weight: a.weight,\n              port: a.port,\n              name: a.target\n            });\n            break;\n          default:\n            ret.push(a);\n            break;\n        }\n      }\n    }\n    if (ret.length === 0) {\n      ret = undefined;\n    }\n    callback(err, ret);\n  };\n  return res;\n};\nexports.resolve = resolve;\nvar resolve4 = function (domain, callback) {\n  return resolve(domain, 'A', function (err, results) {\n    callback(err, results);\n  });\n};\nexports.resolve4 = resolve4;\nvar resolve6 = function (domain, callback) {\n  return resolve(domain, 'AAAA', function (err, results) {\n    callback(err, results);\n  });\n};\nexports.resolve6 = resolve6;\nvar resolveMx = function (domain, callback) {\n  return resolve(domain, 'MX', function (err, results) {\n    callback(err, results);\n  });\n};\nexports.resolveMx = resolveMx;\nvar resolveTxt = function (domain, callback) {\n  return resolve(domain, 'TXT', function (err, results) {\n    callback(err, results);\n  });\n};\nexports.resolveTxt = resolveTxt;\nvar resolveSrv = function (domain, callback) {\n  return resolve(domain, 'SRV', function (err, results) {\n    callback(err, results);\n  });\n};\nexports.resolveSrv = resolveSrv;\nvar resolveNs = function (domain, callback) {\n  return resolve(domain, 'NS', function (err, results) {\n    callback(err, results);\n  });\n};\nexports.resolveNs = resolveNs;\nvar resolveCname = function (domain, callback) {\n  return resolve(domain, 'CNAME', function (err, results) {\n    callback(err, results);\n  });\n};\nexports.resolveCname = resolveCname;\nvar reverse = function (ip, callback) {\n  var error, opts, res;\n  if (!net.isIP(ip)) {\n    error = new Error('getHostByAddr ENOTIMP');\n    error.errno = error.code = 'ENOTIMP';\n    throw error;\n  }\n  opts = {\n    domain: utils.reverseIP(ip),\n    rrtype: PTR\n  };\n  res = new Lookup(opts);\n  res._cb = function (err, response) {\n    var results = [];\n    if (response) {\n      response.answer.forEach(function (a) {\n        if (a.type === PTR) {\n          results.push(a.data);\n        }\n      });\n    }\n    if (results.length === 0) {\n      results = undefined;\n    }\n    callback(err, results);\n  };\n  return res;\n};\nexports.reverse = reverse;\nvar Lookup = function (opts) {\n  Resolve.call(this, opts);\n  this._type = 'getaddrinfo';\n};\n_c2 = Lookup;\nutil.inherits(Lookup, Resolve);\nLookup.prototype.start = function () {\n  var self = this;\n  if (!this._started) {\n    this._search_path = platform.search_path.slice(0);\n    this._preStart();\n  }\n  platform.hosts.lookup(this.question, function (results) {\n    var packet;\n    if (results && results.length) {\n      debug('Lookup in hosts', results);\n      packet = new Packet();\n      packet.answer = results.slice();\n      self._emit(null, packet);\n    } else {\n      debug('Lookup not in hosts');\n      Resolve.prototype.start.call(self);\n    }\n  });\n};\nLookup.prototype._shouldContinue = function () {\n  debug('Lookup should continue', this._server_list.length, this._search_path.length);\n  return this._server_list.length && this._search_path.length;\n};\nLookup.prototype._nextQuestion = function () {\n  debug('Lookup next question');\n  this._buildQuestion([this._domain, this._search_path.pop()].join('.'));\n};\nvar lookup = function (domain, family, callback) {\n  var rrtype, revip, res;\n  if (!callback) {\n    callback = family;\n    family = undefined;\n  }\n  if (!family) {\n    family = 4;\n  }\n  revip = net.isIP(domain);\n  if (revip === 4 || revip === 6) {\n    process.nextTick(function () {\n      callback(null, domain, revip);\n    });\n    return {};\n  }\n  if (!domain) {\n    process.nextTick(function () {\n      callback(null, null, family);\n    });\n    return {};\n  }\n  rrtype = consts.FAMILY_TO_QTYPE[family];\n  var opts = {\n    domain: domain,\n    rrtype: rrtype\n  };\n  res = new Lookup(opts);\n  res._cb = function (err, response) {\n    var i, afamily, address, a, all;\n    if (err) {\n      callback(err, undefined, undefined);\n      return;\n    }\n    all = response.answer.concat(response.additional);\n    for (i = 0; i < all.length; i++) {\n      a = all[i];\n      if (a.type === A || a.type === AAAA) {\n        afamily = consts.QTYPE_TO_FAMILY[a.type];\n        address = a.address;\n        break;\n      }\n    }\n    callback(err, address, afamily);\n  };\n  return res;\n};\nexports.lookup = lookup;\nvar _c, _c2;\n$RefreshReg$(_c, \"Resolve\");\n$RefreshReg$(_c2, \"Lookup\");","map":{"version":3,"names":["ipaddr","require","net","util","EventEmitter","PendingRequests","Packet","consts","utils","platform","A","NAME_TO_QTYPE","AAAA","MX","TXT","NS","CNAME","SRV","PTR","debug","process","env","NODE_DEBUG","match","args","Array","prototype","slice","call","arguments","console","error","apply","Date","now","toString","concat","Request","exports","opts","question","server","String","address","port","type","isIP","Error","indexOf","timeout","try_edns","fired","id","undefined","cache","inherits","handle","err","answer","cached","store","emit","done","clearTimeout","timer_","remove","handleTimeout","send","self","lookup","results","packet","_send","setTimeout","cancel","_queue","sendQueued","forEach","request","start","on","ready","Resolve","cb","_extend","retryOnTruncate","_domain","domain","_rrtype","rrtype","_buildQuestion","_started","_current_server","_server_list","remote","push","_request","_type","_cb","_c","name","class","NAME_TO_QCLASS","IN","_emit","nextTick","syscall","_fillServers","tries","s","t","u","slist","name_servers","length","attempts","reverse","_popServer","splice","_preStart","getTime","edns","_shouldContinue","_nextQuestion","pop","_handleTimeout","bind","_handle","NOERROR","NAME_TO_RCODE","SERVFAIL","NOTFOUND","FORMERR","rcode","errno","header","tc","filter","RCODE_TO_NAME","code","TIMEOUT","resolve","ip","callback","res","response","ret","i","a","priority","exchange","data","weight","target","resolve4","resolve6","resolveMx","resolveTxt","resolveSrv","resolveNs","resolveCname","reverseIP","Lookup","_c2","_search_path","search_path","hosts","join","family","revip","FAMILY_TO_QTYPE","afamily","all","additional","QTYPE_TO_FAMILY","$RefreshReg$"],"sources":["/home/bilal/ReactLabs/myportfolio/src/node_modules/native-dns/lib/client.js"],"sourcesContent":["// Copyright 2011 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n\n'use strict';\n\nvar ipaddr = require('ipaddr.js'),\n    net = require('net'),\n    util = require('util'),\n    EventEmitter = require('events').EventEmitter,\n    PendingRequests = require('./pending'),\n    Packet = require('./packet'),\n    consts = require('native-dns-packet').consts,\n    utils = require('./utils'),\n    platform = require('./platform');\n\nvar A = consts.NAME_TO_QTYPE.A,\n    AAAA = consts.NAME_TO_QTYPE.AAAA,\n    MX = consts.NAME_TO_QTYPE.MX,\n    TXT = consts.NAME_TO_QTYPE.TXT,\n    NS = consts.NAME_TO_QTYPE.NS,\n    CNAME = consts.NAME_TO_QTYPE.CNAME,\n    SRV = consts.NAME_TO_QTYPE.SRV,\n    PTR = consts.NAME_TO_QTYPE.PTR;\n\nvar debug = function() {};\n\nif (process.env.NODE_DEBUG && process.env.NODE_DEBUG.match(/dns/)) {\ndebug = function debug() {\n  var args = Array.prototype.slice.call(arguments);\n  console.error.apply(this, ['client', Date.now().toString()].concat(args));\n};\n}\n\nvar Request = exports.Request = function(opts) {\n  if (!(this instanceof Request)) return new Request(opts);\n\n  this.question = opts.question;\n  this.server = opts.server;\n\n  if (typeof(this.server) === 'string' || this.server instanceof String)\n    this.server = { address: this.server, port: 53, type: 'udp'};\n\n  if (!this.server || !this.server.address || !net.isIP(this.server.address))\n    throw new Error('Server object must be supplied with at least address');\n\n  if (!this.server.type || ['udp', 'tcp'].indexOf(this.server.type) === -1)\n    this.server.type = 'udp';\n\n  if (!this.server.port)\n    this.server.port = 53;\n\n  this.timeout = opts.timeout || 4 * 1000;\n  this.try_edns = opts.try_edns || false;\n\n  this.fired = false;\n  this.id = undefined;\n\n  if (opts.cache || opts.cache === false) {\n    this.cache = opts.cache;\n  } else {\n    this.cache = platform.cache;\n  }\n  debug('request created', this.question);\n};\nutil.inherits(Request, EventEmitter);\n\nRequest.prototype.handle = function(err, answer, cached) {\n  if (!this.fired) {\n    debug('request handled', this.id, this.question);\n\n    if (!cached && this.cache && this.cache.store && answer) {\n      this.cache.store(answer);\n    }\n\n    this.emit('message', err, answer);\n    this.done();\n  }\n};\n\nRequest.prototype.done = function() {\n  debug('request finished', this.id, this.question);\n  this.fired = true;\n  clearTimeout(this.timer_);\n  PendingRequests.remove(this);\n  this.emit('end');\n  this.id = undefined;\n};\n\nRequest.prototype.handleTimeout = function() {\n  if (!this.fired) {\n    debug('request timedout', this.id, this.question);\n    this.emit('timeout');\n    this.done();\n  }\n};\n\nRequest.prototype.error = function(err) {\n  if (!this.fired) {\n    debug('request error', err, this.id, this.question);\n    this.emit('error', err);\n    this.done();\n  }\n};\n\nRequest.prototype.send = function() {\n  debug('request starting', this.question);\n  var self = this;\n\n  if (this.cache && this.cache.lookup) {\n    this.cache.lookup(this.question, function(results) {\n      var packet;\n\n      if (!results) {\n        self._send();\n      } else {\n        packet = new Packet();\n        packet.answer = results.slice();\n        self.handle(null, packet, true);\n      }\n    });\n  } else {\n    this._send();\n  }\n};\n\nRequest.prototype._send = function() {\n  debug('request not in cache', this.question);\n  var self = this;\n\n  this.timer_ = setTimeout(function() {\n    self.handleTimeout();\n  }, this.timeout);\n\n  PendingRequests.send(self);\n};\n\nRequest.prototype.cancel = function() {\n  debug('request cancelled', this.id, this.question);\n  this.emit('cancelled');\n  this.done();\n};\n\nvar _queue = [];\n\nvar sendQueued = function() {\n  debug('platform ready sending queued requests');\n  _queue.forEach(function(request) {\n    request.start();\n  });\n  _queue = [];\n};\n\nplatform.on('ready', function() {\n  sendQueued();\n});\n\nif (platform.ready) {\n  sendQueued();\n}\n\nvar Resolve = function Resolve(opts, cb) {\n  if (!(this instanceof Resolve)) return new Resolve(opts, cb);\n\n  this.opts = util._extend({\n    retryOnTruncate: true,\n  }, opts);\n\n  this._domain = opts.domain;\n  this._rrtype = opts.rrtype;\n\n  this._buildQuestion(this._domain);\n\n  this._started = false;\n  this._current_server = undefined;\n\n  this._server_list = [];\n\n  if (opts.remote) {\n    this._server_list.push({\n      address: opts.remote,\n      port: 53,\n      type: 'tcp',\n    });\n    this._server_list.push({\n      address: opts.remote,\n      port: 53,\n      type: 'udp',\n    });\n  }\n\n  this._request = undefined;\n  this._type = 'getHostByName';\n  this._cb = cb;\n\n  if (!platform.ready) {\n    _queue.push(this);\n  } else {\n    this.start();\n  }\n};\nutil.inherits(Resolve, EventEmitter);\n\nResolve.prototype.cancel = function() {\n  if (this._request) {\n    this._request.cancel();\n  }\n};\n\nResolve.prototype._buildQuestion = function(name) {\n  debug('building question', name);\n  this.question = {\n    type: this._rrtype,\n    class: consts.NAME_TO_QCLASS.IN,\n    name: name\n  };\n};\nexports.Resolve = Resolve;\n\nResolve.prototype._emit = function(err, answer) {\n  debug('resolve end', this._domain);\n  var self = this;\n  process.nextTick(function() {\n    if (err) {\n      err.syscall = self._type;\n    }\n    self._cb(err, answer);\n  });\n};\n\nResolve.prototype._fillServers = function() {\n  debug('resolve filling servers', this._domain);\n  var tries = 0, s, t, u, slist;\n\n  slist = platform.name_servers;\n\n  while (this._server_list.length < platform.attempts) {\n    s = slist[tries % slist.length];\n\n    u = {\n      address: s.address,\n      port: s.port,\n      type: 'udp'\n    };\n\n    t = {\n      address: s.address,\n      port: s.port,\n      type: 'tcp'\n    };\n\n    this._server_list.push(u);\n    this._server_list.push(t);\n\n    tries += 1;\n  }\n\n  this._server_list.reverse();\n};\n\nResolve.prototype._popServer = function() {\n  debug('resolve pop server', this._current_server, this._domain);\n  this._server_list.splice(0, 1, this._current_server);\n};\n\nResolve.prototype._preStart = function() {\n  if (!this._started) {\n    this._started = new Date().getTime();\n    this.try_edns = platform.edns;\n\n    if (!this._server_list.length)\n      this._fillServers();\n  }\n};\n\nResolve.prototype._shouldContinue = function() {\n  debug('resolve should continue', this._server_list.length, this._domain);\n  return this._server_list.length;\n};\n\nResolve.prototype._nextQuestion = function() {\n  debug('resolve next question', this._domain);\n};\n\nResolve.prototype.start = function() {\n  if (!this._started) {\n    this._preStart();\n  }\n\n  if (this._server_list.length === 0) {\n    debug('resolve no more servers', this._domain);\n    this.handleTimeout();\n  } else {\n    this._current_server = this._server_list.pop();\n    debug('resolve start', this._current_server, this._domain);\n\n    this._request = Request({\n      question: this.question,\n      server: this._current_server,\n      timeout: platform.timeout,\n      try_edns: this.try_edns\n    });\n\n    this._request.on('timeout', this._handleTimeout.bind(this));\n    this._request.on('message', this._handle.bind(this));\n    this._request.on('error', this._handle.bind(this));\n\n    this._request.send();\n  }\n};\n\nvar NOERROR = consts.NAME_TO_RCODE.NOERROR,\n    SERVFAIL = consts.NAME_TO_RCODE.SERVFAIL,\n    NOTFOUND = consts.NAME_TO_RCODE.NOTFOUND,\n    FORMERR = consts.NAME_TO_RCODE.FORMERR;\n\nResolve.prototype._handle = function(err, answer) {\n  var rcode, errno;\n\n  if (answer) {\n    rcode = answer.header.rcode;\n  }\n\n  debug('resolve handle', rcode, this._domain);\n\n  switch (rcode) {\n    case NOERROR:\n      // answer trucated retry with tcp\n      //console.log(answer);\n      if (answer.header.tc &&\n          this.opts.retryOnTruncate &&\n          this._shouldContinue()) {\n        debug('truncated', this._domain, answer);\n        this.emit('truncated', err, answer);\n        \n        // remove udp servers\n        this._server_list = this._server_list.filter(function(server) {\n          return server.type === 'tcp';\n        });\n        answer = undefined;\n      }\n      break;\n    case SERVFAIL:\n      if (this._shouldContinue()) {\n        this._nextQuestion();\n        //this._popServer();\n      } else {\n        errno = consts.SERVFAIL;\n      }\n      answer = undefined;\n      break;\n    case NOTFOUND:\n      if (this._shouldContinue()) {\n        this._nextQuestion();\n      } else {\n        errno = consts.NOTFOUND;\n      }\n      answer = undefined;\n      break;\n    case FORMERR:\n      if (this.try_edns) {\n        this.try_edns = false;\n        //this._popServer();\n      } else {\n        errno = consts.FORMERR;\n      }\n      answer = undefined;\n      break;\n    default:\n      if (!err) {\n        errno = consts.RCODE_TO_NAME[rcode];\n        answer = undefined;\n      } else {\n        errno = consts.NOTFOUND;\n      }\n      break;\n  }\n\n  if (errno || answer) {\n    if (errno) {\n      err = new Error(this._type + ' ' + errno);\n      err.errno = err.code = errno;\n    }\n    this._emit(err, answer);\n  } else {\n    this.start();\n  }\n};\n\nResolve.prototype._handleTimeout = function() {\n  var err;\n\n  if (this._server_list.length === 0) {\n    debug('resolve timeout no more servers', this._domain);\n    err = new Error(this._type + ' ' + consts.TIMEOUT);\n    err.errno = consts.TIMEOUT;\n    this._emit(err, undefined);\n  } else {\n    debug('resolve timeout continue', this._domain);\n    this.start();\n  }\n};\n\nvar resolve = function(domain, rrtype, ip, callback) {\n  var res;\n\n  if (!callback) {\n    callback = ip;\n    ip = undefined;\n  }\n\n  if (!callback) {\n    callback = rrtype;\n    rrtype = undefined;\n  }\n\n  rrtype = consts.NAME_TO_QTYPE[rrtype || 'A'];\n\n  if (rrtype === PTR) {\n    return reverse(domain, callback);\n  }\n\n  var opts = {\n    domain: domain,\n    rrtype: rrtype,\n    remote: ip,\n  };\n\n  res = new Resolve(opts);\n\n  res._cb = function(err, response) {\n    var ret = [], i, a;\n\n    if (err) {\n      callback(err, response);\n      return;\n    }\n\n    for (i = 0; i < response.answer.length; i++) {\n      a = response.answer[i];\n      if (a.type === rrtype) {\n        switch (rrtype) {\n          case A:\n          case AAAA:\n            ret.push(a.address);\n            break;\n          case consts.NAME_TO_QTYPE.MX:\n            ret.push({\n              priority: a.priority,\n              exchange: a.exchange\n            });\n            break;\n          case TXT:\n          case NS:\n          case CNAME:\n          case PTR:\n            ret.push(a.data);\n            break;\n          case SRV:\n            ret.push({\n              priority: a.priority,\n              weight: a.weight,\n              port: a.port,\n              name: a.target\n            });\n            break;\n          default:\n            ret.push(a);\n            break;\n        }\n      }\n    }\n\n    if (ret.length === 0) {\n      ret = undefined;\n    }\n\n    callback(err, ret);\n  };\n\n  return res;\n};\nexports.resolve = resolve;\n\nvar resolve4 = function(domain, callback) {\n  return resolve(domain, 'A', function(err, results) {\n    callback(err, results);\n  });\n};\nexports.resolve4 = resolve4;\n\nvar resolve6 = function(domain, callback) {\n  return resolve(domain, 'AAAA', function(err, results) {\n    callback(err, results);\n  });\n};\nexports.resolve6 = resolve6;\n\nvar resolveMx = function(domain, callback) {\n  return resolve(domain, 'MX', function(err, results) {\n    callback(err, results);\n  });\n};\nexports.resolveMx = resolveMx;\n\nvar resolveTxt = function(domain, callback) {\n  return resolve(domain, 'TXT', function(err, results) {\n    callback(err, results);\n  });\n};\nexports.resolveTxt = resolveTxt;\n\nvar resolveSrv = function(domain, callback) {\n  return resolve(domain, 'SRV', function(err, results) {\n    callback(err, results);\n  });\n};\nexports.resolveSrv = resolveSrv;\n\nvar resolveNs = function(domain, callback) {\n  return resolve(domain, 'NS', function(err, results) {\n    callback(err, results);\n  });\n};\nexports.resolveNs = resolveNs;\n\nvar resolveCname = function(domain, callback) {\n  return resolve(domain, 'CNAME', function(err, results) {\n    callback(err, results);\n  });\n};\nexports.resolveCname = resolveCname;\n\nvar reverse = function(ip, callback) {\n  var error, opts, res;\n\n  if (!net.isIP(ip)) {\n    error = new Error('getHostByAddr ENOTIMP');\n    error.errno = error.code = 'ENOTIMP';\n    throw error;\n  }\n\n  opts = {\n    domain: utils.reverseIP(ip),\n    rrtype: PTR\n  };\n\n  res = new Lookup(opts);\n\n  res._cb = function(err, response) {\n    var results = [];\n\n    if (response) {\n      response.answer.forEach(function(a) {\n        if (a.type === PTR) {\n          results.push(a.data);\n        }\n      });\n    }\n\n    if (results.length === 0) {\n      results = undefined;\n    }\n\n    callback(err, results);\n  };\n\n  return res;\n};\nexports.reverse = reverse;\n\nvar Lookup = function(opts) {\n  Resolve.call(this, opts);\n  this._type = 'getaddrinfo';\n};\nutil.inherits(Lookup, Resolve);\n\nLookup.prototype.start = function() {\n  var self = this;\n\n  if (!this._started) {\n    this._search_path = platform.search_path.slice(0);\n    this._preStart();\n  }\n\n  platform.hosts.lookup(this.question, function(results) {\n    var packet;\n    if (results && results.length) {\n      debug('Lookup in hosts', results);\n      packet = new Packet();\n      packet.answer = results.slice();\n      self._emit(null, packet);\n    } else {\n      debug('Lookup not in hosts');\n      Resolve.prototype.start.call(self);\n    }\n  });\n};\n\nLookup.prototype._shouldContinue = function() {\n  debug('Lookup should continue', this._server_list.length,\n        this._search_path.length);\n  return this._server_list.length && this._search_path.length;\n};\n\nLookup.prototype._nextQuestion = function() {\n  debug('Lookup next question');\n  this._buildQuestion([this._domain, this._search_path.pop()].join('.'));\n};\n\nvar lookup = function(domain, family, callback) {\n  var rrtype, revip, res;\n\n  if (!callback) {\n    callback = family;\n    family = undefined;\n  }\n\n  if (!family) {\n    family = 4;\n  }\n\n  revip = net.isIP(domain);\n\n  if (revip === 4 || revip === 6) {\n    process.nextTick(function() {\n      callback(null, domain, revip);\n    });\n    return {};\n  }\n\n  if (!domain) {\n    process.nextTick(function() {\n      callback(null, null, family);\n    });\n    return {};\n  }\n\n  rrtype = consts.FAMILY_TO_QTYPE[family];\n\n  var opts = {\n    domain: domain,\n    rrtype: rrtype\n  };\n\n  res = new Lookup(opts);\n\n  res._cb = function(err, response) {\n    var i, afamily, address, a, all;\n\n    if (err) {\n      callback(err, undefined, undefined);\n      return;\n    }\n\n    all = response.answer.concat(response.additional);\n\n    for (i = 0; i < all.length; i++) {\n      a = all[i];\n\n      if (a.type === A || a.type === AAAA) {\n        afamily = consts.QTYPE_TO_FAMILY[a.type];\n        address = a.address;\n        break;\n      }\n    }\n\n    callback(err, address, afamily);\n  };\n\n  return res;\n};\nexports.lookup = lookup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}