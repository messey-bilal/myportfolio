{"ast":null,"code":"// Copyright 2011 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n\n'use strict';\n\nvar fs = require('fs'),\n  EventEmitter = require('events').EventEmitter,\n  net = require('net'),\n  os = require('os'),\n  util = require('util'),\n  Cache = require('native-dns-cache'),\n  consts = require('native-dns-packet').consts,\n  path = require('path'),\n  utils = require('./utils');\nvar A = consts.NAME_TO_QTYPE.A,\n  AAAA = consts.NAME_TO_QTYPE.AAAA,\n  PTR = consts.NAME_TO_QTYPE.PTR;\nvar Platform = function () {\n  this._nsReady = false;\n  this._hostsReady = false;\n  Object.defineProperty(this, 'ready', {\n    get: function () {\n      return this._nsReady && this._hostsReady;\n    }\n  });\n  this._watches = {};\n  Object.defineProperty(this, 'watching', {\n    get: function () {\n      return Object.keys(this._watches).length > 0;\n    },\n    set: function (value) {\n      var k;\n      if (value) this._watchFiles();else {\n        for (k in this._watches) {\n          this._watches[k].close();\n          delete this._watches[k];\n        }\n      }\n    }\n  });\n  this.hosts = new Cache();\n  this._initNameServers();\n  this._initHostsFile();\n  this._populate();\n  this.cache = false; //new Cache();\n};\n_c = Platform;\nutil.inherits(Platform, EventEmitter);\nPlatform.prototype.reload = function () {\n  this.emit('unready');\n  this._initNameServers();\n  this._initHostsFile();\n  this._populate();\n};\nPlatform.prototype._initNameServers = function () {\n  this._nsReady = false;\n  this.name_servers = [];\n  this.search_path = [];\n  this.timeout = 5 * 1000;\n  this.attempts = 5;\n  this.edns = false;\n};\nPlatform.prototype._initHostsFile = function () {\n  this._hostsReady = false;\n  this.hosts.purge();\n};\nPlatform.prototype._populate = function () {\n  var hostsfile,\n    self = this;\n  switch (os.platform()) {\n    case 'win32':\n      this.name_servers = [{\n        address: '8.8.8.8',\n        port: 53\n      }, {\n        address: '8.8.4.4',\n        port: 53\n      }];\n      self._nsReady = true;\n      hostsfile = path.join(process.env.SystemRoot, '\\\\System32\\\\drivers\\\\etc\\\\hosts');\n      break;\n    default:\n      this.parseResolv();\n      hostsfile = '/etc/hosts';\n      break;\n  }\n  this._parseHosts(hostsfile);\n};\nPlatform.prototype._watchFiles = function () {\n  var self = this,\n    watchParams;\n  watchParams = {\n    persistent: false\n  };\n  switch (os.platform()) {\n    case 'win32':\n      //TODO XXX FIXME: it would be nice if this existed\n      break;\n    default:\n      this._watches.resolve = fs.watch('/etc/resolv.conf', watchParams, function (event, filename) {\n        if (event === 'change') {\n          self.emit('unready');\n          self._initNameServers();\n          self.parseResolv();\n        }\n      });\n      this._watches.hosts = fs.watch('/etc/hosts', watchParams, function (event, filename) {\n        if (event === 'change') {\n          self.emit('unready');\n          self._initHostsFile();\n          self._parseHosts(hostsfile);\n        }\n      });\n      break;\n  }\n};\nPlatform.prototype._checkReady = function () {\n  if (this.ready) {\n    this.emit('ready');\n  }\n};\nPlatform.prototype.parseResolv = function () {\n  var self = this;\n  fs.readFile('/etc/resolv.conf', 'ascii', function (err, file) {\n    if (err) {\n      throw err;\n    }\n    file.split(/\\n/).forEach(function (line) {\n      var i, parts, subparts;\n      line = line.replace(/^\\s+|\\s+$/g, '');\n      if (!line.match(/^#/)) {\n        parts = line.split(/\\s+/);\n        switch (parts[0]) {\n          case 'nameserver':\n            self.name_servers.push({\n              address: parts[1],\n              port: 53\n            });\n            break;\n          case 'domain':\n            self.search_path = [parts[1]];\n            break;\n          case 'search':\n            self.search_path = [parts.slice(1)];\n            break;\n          case 'options':\n            for (i = 1; i < parts.length; i++) {\n              subparts = parts[i].split(/:/);\n              switch (subparts[0]) {\n                case 'timeout':\n                  self.timeout = parseInt(subparts[1], 10) * 1000;\n                  break;\n                case 'attempts':\n                  self.attempts = parseInt(subparts[1], 10);\n                  break;\n                case 'edns0':\n                  self.edns = true;\n                  break;\n              }\n            }\n            break;\n        }\n      }\n    });\n    self._nsReady = true;\n    self._checkReady();\n  });\n};\nPlatform.prototype._parseHosts = function (hostsfile) {\n  var self = this;\n  fs.readFile(hostsfile, 'ascii', function (err, file) {\n    var toStore = {};\n    if (err) {\n      throw err;\n    }\n    file.split(/\\n/).forEach(function (line) {\n      var i, parts, ip, revip, kind;\n      line = line.replace(/^\\s+|\\s+$/g, '');\n      if (!line.match(/^#/)) {\n        parts = line.split(/\\s+/);\n        ip = parts[0];\n        parts = parts.slice(1);\n        kind = net.isIP(ip);\n        if (parts.length && ip && kind) {\n          /* IP -> Domain */\n          revip = utils.reverseIP(ip);\n          parts.forEach(function (domain) {\n            var r = toStore[revip];\n            if (!r) r = toStore[revip] = {};\n            var t = r[PTR];\n            if (!t) t = r[PTR] = [];\n            t.push({\n              type: PTR,\n              class: 1,\n              name: revip,\n              data: domain,\n              ttl: Infinity\n            });\n          });\n\n          /* Domain -> IP */\n          parts.forEach(function (domain) {\n            var r = toStore[domain.toLowerCase()];\n            if (!r) {\n              r = toStore[domain.toLowerCase()] = {};\n            }\n            var type = kind === 4 ? A : AAAA;\n            var t = r[type];\n            if (!t) t = r[type] = [];\n            t.push({\n              type: type,\n              name: domain.toLowerCase(),\n              address: ip,\n              ttl: Infinity\n            });\n          });\n        }\n      }\n    });\n    Object.keys(toStore).forEach(function (key) {\n      self.hosts._store.set(self.hosts._zone, key, toStore[key]);\n    });\n    self._hostsReady = true;\n    self._checkReady();\n  });\n};\nmodule.exports = new Platform();\nvar _c;\n$RefreshReg$(_c, \"Platform\");","map":{"version":3,"names":["fs","require","EventEmitter","net","os","util","Cache","consts","path","utils","A","NAME_TO_QTYPE","AAAA","PTR","Platform","_nsReady","_hostsReady","Object","defineProperty","get","_watches","keys","length","set","value","k","_watchFiles","close","hosts","_initNameServers","_initHostsFile","_populate","cache","_c","inherits","prototype","reload","emit","name_servers","search_path","timeout","attempts","edns","purge","hostsfile","self","platform","address","port","join","process","env","SystemRoot","parseResolv","_parseHosts","watchParams","persistent","resolve","watch","event","filename","_checkReady","ready","readFile","err","file","split","forEach","line","i","parts","subparts","replace","match","push","slice","parseInt","toStore","ip","revip","kind","isIP","reverseIP","domain","r","t","type","class","name","data","ttl","Infinity","toLowerCase","key","_store","_zone","module","exports","$RefreshReg$"],"sources":["/home/bilal/ReactLabs/myportfolio/src/node_modules/native-dns/lib/platform.js"],"sourcesContent":["// Copyright 2011 Timothy J Fontaine <tjfontaine@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE\n\n'use strict';\n\nvar fs = require('fs'),\n    EventEmitter = require('events').EventEmitter,\n    net = require('net'),\n    os = require('os'),\n    util = require('util'),\n    Cache = require('native-dns-cache'),\n    consts = require('native-dns-packet').consts,\n    path = require('path'),\n    utils = require('./utils');\n\nvar A = consts.NAME_TO_QTYPE.A,\n    AAAA = consts.NAME_TO_QTYPE.AAAA,\n    PTR = consts.NAME_TO_QTYPE.PTR;\n\nvar Platform = function() {\n  this._nsReady = false;\n  this._hostsReady = false;\n\n  Object.defineProperty(this, 'ready', {\n    get: function() {\n      return this._nsReady && this._hostsReady;\n    }\n  });\n\n  this._watches = {};\n\n  Object.defineProperty(this, 'watching', {\n    get: function() {\n      return Object.keys(this._watches).length > 0;\n    },\n    set: function(value) {\n      var k;\n      if (value)\n        this._watchFiles();\n      else {\n        for (k in this._watches) {\n          this._watches[k].close();\n          delete this._watches[k];\n        }\n      }\n    }\n  });\n\n  this.hosts = new Cache();\n\n  this._initNameServers();\n  this._initHostsFile();\n  this._populate();\n\n  this.cache = false; //new Cache();\n};\nutil.inherits(Platform, EventEmitter);\n\nPlatform.prototype.reload = function() {\n  this.emit('unready');\n  this._initNameServers();\n  this._initHostsFile();\n  this._populate();\n};\n\nPlatform.prototype._initNameServers = function() {\n  this._nsReady = false;\n  this.name_servers = [];\n  this.search_path = [];\n  this.timeout = 5 * 1000;\n  this.attempts = 5;\n  this.edns = false;\n};\n\nPlatform.prototype._initHostsFile = function() {\n  this._hostsReady = false;\n  this.hosts.purge();\n};\n\nPlatform.prototype._populate = function() {\n  var hostsfile, self = this;\n\n  switch (os.platform()) {\n    case 'win32':\n      this.name_servers = [\n        {\n          address: '8.8.8.8',\n          port: 53\n        },\n        {\n          address: '8.8.4.4',\n          port: 53\n        }\n      ];\n      self._nsReady = true;\n      hostsfile = path.join(process.env.SystemRoot,\n                        '\\\\System32\\\\drivers\\\\etc\\\\hosts');\n      break;\n    default:\n      this.parseResolv();\n      hostsfile = '/etc/hosts';\n      break;\n  }\n\n  this._parseHosts(hostsfile);\n};\n\nPlatform.prototype._watchFiles = function() {\n  var self = this, watchParams;\n\n  watchParams = {persistent: false};\n\n  switch (os.platform()) {\n    case 'win32':\n      //TODO XXX FIXME: it would be nice if this existed\n      break;\n    default:\n      this._watches.resolve = fs.watch('/etc/resolv.conf', watchParams,\n          function(event, filename) {\n            if (event === 'change') {\n              self.emit('unready');\n              self._initNameServers();\n              self.parseResolv();\n            }\n          });\n      this._watches.hosts = fs.watch('/etc/hosts', watchParams,\n          function(event, filename) {\n            if (event === 'change') {\n              self.emit('unready');\n              self._initHostsFile();\n              self._parseHosts(hostsfile);\n            }\n          });\n      break;\n  }\n};\n\nPlatform.prototype._checkReady = function() {\n  if (this.ready) {\n    this.emit('ready');\n  }\n};\n\nPlatform.prototype.parseResolv = function() {\n  var self = this;\n\n  fs.readFile('/etc/resolv.conf', 'ascii', function(err, file) {\n    if (err) {\n      throw err;\n    }\n\n    file.split(/\\n/).forEach(function(line) {\n      var i, parts, subparts;\n      line = line.replace(/^\\s+|\\s+$/g, '');\n      if (!line.match(/^#/)) {\n        parts = line.split(/\\s+/);\n        switch (parts[0]) {\n          case 'nameserver':\n            self.name_servers.push({\n              address: parts[1],\n              port: 53\n            });\n            break;\n          case 'domain':\n            self.search_path = [parts[1]];\n            break;\n          case 'search':\n            self.search_path = [parts.slice(1)];\n            break;\n          case 'options':\n            for (i = 1; i < parts.length; i++) {\n              subparts = parts[i].split(/:/);\n              switch (subparts[0]) {\n                case 'timeout':\n                  self.timeout = parseInt(subparts[1], 10) * 1000;\n                  break;\n                case 'attempts':\n                  self.attempts = parseInt(subparts[1], 10);\n                  break;\n                case 'edns0':\n                  self.edns = true;\n                  break;\n              }\n            }\n            break;\n        }\n      }\n    });\n\n    self._nsReady = true;\n    self._checkReady();\n  });\n};\n\nPlatform.prototype._parseHosts = function(hostsfile) {\n  var self = this;\n\n  fs.readFile(hostsfile, 'ascii', function(err, file) {\n    var toStore = {};\n    if (err) {\n      throw err;\n    }\n\n    file.split(/\\n/).forEach(function(line) {\n      var i, parts, ip, revip, kind;\n      line = line.replace(/^\\s+|\\s+$/g, '');\n      if (!line.match(/^#/)) {\n        parts = line.split(/\\s+/);\n        ip = parts[0];\n        parts = parts.slice(1);\n        kind = net.isIP(ip);\n\n        if (parts.length && ip && kind) {\n          /* IP -> Domain */\n          revip = utils.reverseIP(ip);\n          parts.forEach(function(domain) {\n            var r = toStore[revip];\n            if (!r)\n              r = toStore[revip] = {};\n            var t = r[PTR];\n            if (!t)\n              t = r[PTR] = [];\n            t.push({\n              type: PTR,\n              class: 1,\n              name: revip,\n              data: domain,\n              ttl: Infinity\n            });\n          });\n\n          /* Domain -> IP */\n          parts.forEach(function(domain) {\n            var r = toStore[domain.toLowerCase()];\n            if (!r) {\n              r = toStore[domain.toLowerCase()] = {};\n            }\n            var type = kind === 4 ? A : AAAA;\n            var t = r[type];\n            if (!t)\n              t = r[type] = [];\n            t.push({\n              type: type,\n              name: domain.toLowerCase(),\n              address: ip,\n              ttl: Infinity\n            });\n          });\n        }\n      }\n    });\n\n    Object.keys(toStore).forEach(function (key) {\n      self.hosts._store.set(self.hosts._zone, key, toStore[key]);\n    });\n    self._hostsReady = true;\n    self._checkReady();\n  });\n};\n\nmodule.exports = new Platform();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}