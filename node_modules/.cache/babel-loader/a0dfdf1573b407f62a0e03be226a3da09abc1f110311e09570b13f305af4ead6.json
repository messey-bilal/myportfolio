{"ast":null,"code":"const fs = require(\"fs\");\nimport { createTransport } from \"nodemailer\";\nimport { appendFile } from \"fs\";\nconst logToFile = message => {\n  const logMessage = `[${new Date().toISOString()}] ${message}\\n`;\n  appendFile(\"sendMail.log\", logMessage, err => {\n    if (err) {\n      console.error(\"Error writing to log file:\", err);\n    }\n  });\n};\nconst sendMail = async (name, to, from, subject, message) => {\n  logToFile(\"Sending email..., in the sendMail.js file\");\n  try {\n    let transporter = createTransport({\n      service: \"gmail\",\n      host: \"smtp.google.com\",\n      secure: false,\n      port: 25,\n      auth: {\n        user: process.env.EMAIL_USER,\n        pass: process.env.EMAIL_PASS\n      },\n      tls: {\n        rejectUnauthorized: false\n      }\n    });\n    const mailOptions = {\n      from: from,\n      to: to,\n      subject: subject,\n      text: `${name} has sent a message: ${message}`\n    };\n    await transporter.sendMail(mailOptions);\n    logToFile(\"Email sent!\");\n    return true;\n  } catch (error) {\n    logToFile(`Error sending email: ${error}`);\n    return false;\n  }\n};\nmodule.exports = sendMail;","map":{"version":3,"names":["fs","require","createTransport","appendFile","logToFile","message","logMessage","Date","toISOString","err","console","error","sendMail","name","to","from","subject","transporter","service","host","secure","port","auth","user","process","env","EMAIL_USER","pass","EMAIL_PASS","tls","rejectUnauthorized","mailOptions","text","module","exports"],"sources":["/home/bilal/ReactLabs/myportfolio/src/smtp/sendMail.js"],"sourcesContent":["const fs = require(\"fs\");\n\nimport { createTransport } from \"nodemailer\";\nimport { appendFile } from \"fs\";\n\nconst logToFile = (message) => {\n  const logMessage = `[${new Date().toISOString()}] ${message}\\n`;\n  appendFile(\"sendMail.log\", logMessage, (err) => {\n    if (err) {\n      console.error(\"Error writing to log file:\", err);\n    }\n  });\n};\n\nconst sendMail = async (name, to, from, subject, message) => {\n  logToFile(\"Sending email..., in the sendMail.js file\");\n  try {\n    let transporter = createTransport({\n      service: \"gmail\",\n      host: \"smtp.google.com\",\n      secure: false,\n      port: 25,\n      auth: { user: process.env.EMAIL_USER, pass: process.env.EMAIL_PASS },\n      tls: { rejectUnauthorized: false },\n    });\n    const mailOptions = {\n      from: from,\n      to: to,\n      subject: subject,\n      text: `${name} has sent a message: ${message}`,\n    };\n    await transporter.sendMail(mailOptions);\n    logToFile(\"Email sent!\");\n    return true;\n  } catch (error) {\n    logToFile(`Error sending email: ${error}`);\n    return false;\n  }\n};\n\nmodule.exports = sendMail;\n"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AAExB,SAASC,eAAe,QAAQ,YAAY;AAC5C,SAASC,UAAU,QAAQ,IAAI;AAE/B,MAAMC,SAAS,GAAIC,OAAO,IAAK;EAC7B,MAAMC,UAAU,GAAI,IAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAE,KAAIH,OAAQ,IAAG;EAC/DF,UAAU,CAAC,cAAc,EAAEG,UAAU,EAAGG,GAAG,IAAK;IAC9C,IAAIA,GAAG,EAAE;MACPC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;IAClD;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAMG,QAAQ,GAAG,MAAAA,CAAOC,IAAI,EAAEC,EAAE,EAAEC,IAAI,EAAEC,OAAO,EAAEX,OAAO,KAAK;EAC3DD,SAAS,CAAC,2CAA2C,CAAC;EACtD,IAAI;IACF,IAAIa,WAAW,GAAGf,eAAe,CAAC;MAChCgB,OAAO,EAAE,OAAO;MAChBC,IAAI,EAAE,iBAAiB;MACvBC,MAAM,EAAE,KAAK;MACbC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE;QAAEC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,UAAU;QAAEC,IAAI,EAAEH,OAAO,CAACC,GAAG,CAACG;MAAW,CAAC;MACpEC,GAAG,EAAE;QAAEC,kBAAkB,EAAE;MAAM;IACnC,CAAC,CAAC;IACF,MAAMC,WAAW,GAAG;MAClBhB,IAAI,EAAEA,IAAI;MACVD,EAAE,EAAEA,EAAE;MACNE,OAAO,EAAEA,OAAO;MAChBgB,IAAI,EAAG,GAAEnB,IAAK,wBAAuBR,OAAQ;IAC/C,CAAC;IACD,MAAMY,WAAW,CAACL,QAAQ,CAACmB,WAAW,CAAC;IACvC3B,SAAS,CAAC,aAAa,CAAC;IACxB,OAAO,IAAI;EACb,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdP,SAAS,CAAE,wBAAuBO,KAAM,EAAC,CAAC;IAC1C,OAAO,KAAK;EACd;AACF,CAAC;AAEDsB,MAAM,CAACC,OAAO,GAAGtB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}