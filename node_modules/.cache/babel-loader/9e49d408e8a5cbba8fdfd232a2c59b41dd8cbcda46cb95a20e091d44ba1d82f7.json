{"ast":null,"code":"require(\"dotenv\").config({\n  path: __dirname + \"./.env\",\n  override: true\n});\nconst express = require(\"express\");\nconst bodyParser = require(\"body-parser\");\nconst sendMail = require(\"./sendMail.js\");\nconst app = express();\nconst port = process.env.PORT || 3001;\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.post(\"/api/sendmail\", async (req, res) => {\n  const {\n    name,\n    from,\n    subject,\n    message\n  } = req.body;\n  try {\n    await sendMail(name, \"messey.bilal@gmail.com\", from, subject, message);\n    res.status(200).send({\n      message: \"Email sent successfully\"\n    });\n  } catch (error) {\n    console.error(\"Error sending email:\", error);\n    res.status(500).send({\n      message: \"Error sending email\"\n    });\n  }\n});\napp.listen(port, () => {\n  console.log(`Server is running on port ${port}`);\n});","map":{"version":3,"names":["require","config","path","__dirname","override","express","bodyParser","sendMail","app","port","process","env","PORT","use","json","urlencoded","extended","post","req","res","name","from","subject","message","body","status","send","error","console","listen","log"],"sources":["/home/bilal/ReactLabs/myportfolio/src/smtp/server.js"],"sourcesContent":["require(\"dotenv\").config({ path: __dirname + \"./.env\", override: true });\nconst express = require(\"express\");\nconst bodyParser = require(\"body-parser\");\nconst sendMail = require(\"./sendMail.js\");\nconst app = express();\nconst port = process.env.PORT || 3001;\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\napp.post(\"/api/sendmail\", async (req, res) => {\n  const { name, from, subject, message } = req.body;\n  try {\n    await sendMail(name, \"messey.bilal@gmail.com\", from, subject, message);\n    res.status(200).send({ message: \"Email sent successfully\" });\n  } catch (error) {\n    console.error(\"Error sending email:\", error);\n    res.status(500).send({ message: \"Error sending email\" });\n  }\n});\n\napp.listen(port, () => {\n  console.log(`Server is running on port ${port}`);\n});\n"],"mappings":"AAAAA,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC;EAAEC,IAAI,EAAEC,SAAS,GAAG,QAAQ;EAAEC,QAAQ,EAAE;AAAK,CAAC,CAAC;AACxE,MAAMC,OAAO,GAAGL,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMM,UAAU,GAAGN,OAAO,CAAC,aAAa,CAAC;AACzC,MAAMO,QAAQ,GAAGP,OAAO,CAAC,eAAe,CAAC;AACzC,MAAMQ,GAAG,GAAGH,OAAO,CAAC,CAAC;AACrB,MAAMI,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI;AAErCJ,GAAG,CAACK,GAAG,CAACP,UAAU,CAACQ,IAAI,CAAC,CAAC,CAAC;AAC1BN,GAAG,CAACK,GAAG,CAACP,UAAU,CAACS,UAAU,CAAC;EAAEC,QAAQ,EAAE;AAAK,CAAC,CAAC,CAAC;AAElDR,GAAG,CAACS,IAAI,CAAC,eAAe,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC5C,MAAM;IAAEC,IAAI;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGL,GAAG,CAACM,IAAI;EACjD,IAAI;IACF,MAAMjB,QAAQ,CAACa,IAAI,EAAE,wBAAwB,EAAEC,IAAI,EAAEC,OAAO,EAAEC,OAAO,CAAC;IACtEJ,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEH,OAAO,EAAE;IAA0B,CAAC,CAAC;EAC9D,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5CR,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEH,OAAO,EAAE;IAAsB,CAAC,CAAC;EAC1D;AACF,CAAC,CAAC;AAEFf,GAAG,CAACqB,MAAM,CAACpB,IAAI,EAAE,MAAM;EACrBmB,OAAO,CAACE,GAAG,CAAE,6BAA4BrB,IAAK,EAAC,CAAC;AAClD,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}